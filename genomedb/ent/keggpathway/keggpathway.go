// Code generated by ent, DO NOT EDIT.

package keggpathway

const (
	// Label holds the string label denoting the keggpathway type in the database.
	Label = "kegg_pathway"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeRelatingMap holds the string denoting the relating_map edge name in mutations.
	EdgeRelatingMap = "relating_map"
	// EdgeRelatedMap holds the string denoting the related_map edge name in mutations.
	EdgeRelatedMap = "related_map"
	// EdgeReactions holds the string denoting the reactions edge name in mutations.
	EdgeReactions = "reactions"
	// EdgeOrthologies holds the string denoting the orthologies edge name in mutations.
	EdgeOrthologies = "orthologies"
	// Table holds the table name of the keggpathway in the database.
	Table = "kegg_pathways"
	// RelatingMapTable is the table that holds the relating_map relation/edge. The primary key declared below.
	RelatingMapTable = "kegg_pathway_related_map"
	// RelatedMapTable is the table that holds the related_map relation/edge. The primary key declared below.
	RelatedMapTable = "kegg_pathway_related_map"
	// ReactionsTable is the table that holds the reactions relation/edge. The primary key declared below.
	ReactionsTable = "kegg_pathway_reactions"
	// ReactionsInverseTable is the table name for the KeggReaction entity.
	// It exists in this package in order to avoid circular dependency with the "keggreaction" package.
	ReactionsInverseTable = "kegg_reactions"
	// OrthologiesTable is the table that holds the orthologies relation/edge. The primary key declared below.
	OrthologiesTable = "kegg_pathway_orthologies"
	// OrthologiesInverseTable is the table name for the KeggOrthlogy entity.
	// It exists in this package in order to avoid circular dependency with the "keggorthlogy" package.
	OrthologiesInverseTable = "kegg_orthlogies"
)

// Columns holds all SQL columns for keggpathway fields.
var Columns = []string{
	FieldID,
	FieldName,
}

var (
	// RelatingMapPrimaryKey and RelatingMapColumn2 are the table columns denoting the
	// primary key for the relating_map relation (M2M).
	RelatingMapPrimaryKey = []string{"kegg_pathway_id", "relating_map_id"}
	// RelatedMapPrimaryKey and RelatedMapColumn2 are the table columns denoting the
	// primary key for the related_map relation (M2M).
	RelatedMapPrimaryKey = []string{"kegg_pathway_id", "relating_map_id"}
	// ReactionsPrimaryKey and ReactionsColumn2 are the table columns denoting the
	// primary key for the reactions relation (M2M).
	ReactionsPrimaryKey = []string{"kegg_pathway_id", "kegg_reaction_id"}
	// OrthologiesPrimaryKey and OrthologiesColumn2 are the table columns denoting the
	// primary key for the orthologies relation (M2M).
	OrthologiesPrimaryKey = []string{"kegg_pathway_id", "kegg_orthlogy_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
