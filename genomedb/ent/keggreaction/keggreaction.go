// Code generated by ent, DO NOT EDIT.

package keggreaction

const (
	// Label holds the string label denoting the keggreaction type in the database.
	Label = "kegg_reaction"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgePathways holds the string denoting the pathways edge name in mutations.
	EdgePathways = "pathways"
	// Table holds the table name of the keggreaction in the database.
	Table = "kegg_reactions"
	// PathwaysTable is the table that holds the pathways relation/edge. The primary key declared below.
	PathwaysTable = "kegg_pathway_reactions"
	// PathwaysInverseTable is the table name for the KeggPathway entity.
	// It exists in this package in order to avoid circular dependency with the "keggpathway" package.
	PathwaysInverseTable = "kegg_pathways"
)

// Columns holds all SQL columns for keggreaction fields.
var Columns = []string{
	FieldID,
	FieldName,
}

var (
	// PathwaysPrimaryKey and PathwaysColumn2 are the table columns denoting the
	// primary key for the pathways relation (M2M).
	PathwaysPrimaryKey = []string{"kegg_pathway_id", "kegg_reaction_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
