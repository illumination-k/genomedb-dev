// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: genomedb/v1/transcript.proto

package genomedbv1connect

import (
	context "context"
	errors "errors"
	v1 "genomedb/protogen/genomedb/v1"
	connect_go "github.com/bufbuild/connect-go"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// TranscriptServiceName is the fully-qualified name of the TranscriptService service.
	TranscriptServiceName = "genomedb.v1.TranscriptService"
)

// TranscriptServiceClient is a client for the genomedb.v1.TranscriptService service.
type TranscriptServiceClient interface {
	GetSequence(context.Context, *connect_go.Request[v1.TranscriptServiceGetSequenceRequest]) (*connect_go.Response[v1.TranscriptServiceGetSequenceResponse], error)
}

// NewTranscriptServiceClient constructs a client for the genomedb.v1.TranscriptService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewTranscriptServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) TranscriptServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &transcriptServiceClient{
		getSequence: connect_go.NewClient[v1.TranscriptServiceGetSequenceRequest, v1.TranscriptServiceGetSequenceResponse](
			httpClient,
			baseURL+"/genomedb.v1.TranscriptService/GetSequence",
			opts...,
		),
	}
}

// transcriptServiceClient implements TranscriptServiceClient.
type transcriptServiceClient struct {
	getSequence *connect_go.Client[v1.TranscriptServiceGetSequenceRequest, v1.TranscriptServiceGetSequenceResponse]
}

// GetSequence calls genomedb.v1.TranscriptService.GetSequence.
func (c *transcriptServiceClient) GetSequence(ctx context.Context, req *connect_go.Request[v1.TranscriptServiceGetSequenceRequest]) (*connect_go.Response[v1.TranscriptServiceGetSequenceResponse], error) {
	return c.getSequence.CallUnary(ctx, req)
}

// TranscriptServiceHandler is an implementation of the genomedb.v1.TranscriptService service.
type TranscriptServiceHandler interface {
	GetSequence(context.Context, *connect_go.Request[v1.TranscriptServiceGetSequenceRequest]) (*connect_go.Response[v1.TranscriptServiceGetSequenceResponse], error)
}

// NewTranscriptServiceHandler builds an HTTP handler from the service implementation. It returns
// the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewTranscriptServiceHandler(svc TranscriptServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle("/genomedb.v1.TranscriptService/GetSequence", connect_go.NewUnaryHandler(
		"/genomedb.v1.TranscriptService/GetSequence",
		svc.GetSequence,
		opts...,
	))
	return "/genomedb.v1.TranscriptService/", mux
}

// UnimplementedTranscriptServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedTranscriptServiceHandler struct{}

func (UnimplementedTranscriptServiceHandler) GetSequence(context.Context, *connect_go.Request[v1.TranscriptServiceGetSequenceRequest]) (*connect_go.Response[v1.TranscriptServiceGetSequenceResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("genomedb.v1.TranscriptService.GetSequence is not implemented"))
}
